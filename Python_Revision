# Ordered Collection of Items
# You can store anything inside list like int, float, char

listme = [1,2,3,4,5,'sachin',8.9, None]

listme[1:] = ['two','three','four','five']

print(listme)

O: [1, 'two', 'three', 'four', 'five']



# insert at position
# append : list within list
# extend : element extend
list1 = [1,2,3,4,5]
list2 = [6,7,8,9,10]

list3 = list1 + list2

list1.insert(1,'sachin')
print(list1)
print(list3)


list = [1,2,3,4,5,6,7,8,9,10]
list.pop(5)
print(list

split method : string to list converstion
join : list to string
mystring = 'sachin arora grade a'
listme = mystring.split(" ")


name, age = input("Enter name and age separated by comma : ").split(",")
print(name)
print(age)

print(listme)


list = [1,2,3,4,5,6,7,8,9,10]
del list[9]
print(list)

list = [1,2,3,4,5,6,7,8,9,10]
list.remove(6)
print(list)
ValueError : If element not in list

#Other list methods: Sorted(just to print in sorted) , sort , count , clear, copy 
listme = ['apple','mango','banana','orange','grapes']
print(sorted(listme))


lisme = ['sachin','24']
print(",".join(lisme))



#List Vs Arrays:
#List : flexible, hetrogeneous elelents
#Array Modiule : Numpy 
#Arrays : Homo 
#
#List Vs String:
#List are mutable
#String are immutable
#strin.title()


POP method returns a popped value :
listme = list(range(0,11))
popped_item = listme.pop()
print(popped_item)



Index functon with list 
listme = [1,2,3,4,5,6,7,8,9,10]
listme.index(1,2,7)


tuples () : Immutable
tuples are faster than lists
Performcnce benefits

Methods : count(), index(),len, slicing


Tuple Unpacking:
mytuple = ('abc', 'def', 'ghi')
mytuple1,mytuple2,mytuple4 = (mytuple)
print(mytuple1)
print(mytuple2)
print(mytuple4)

Tuple Without paanthesis : 
mytuple = 'abc', 'def', 'ghi'


