Python 3 Vs Python 2 :

Python 3 has much more advanced libraries as compared to python 2
and much more efficient 


We can't use special characters in varibale name like $
variable names starts with letter or _


name,age= input("Enter your name and age : ").split()
print(name)
print(age)


Emoji in python : https://unicode.org/emoji/charts/full-emoji-list.html#1f607


name = 'Sachin'
age = 34

print("Your name is " + name + " and age is " + str(age) )
print("Your name is {} and age is {}".format(name,age+2))
print(f"Your name is {name} and age is {age+2}")


i,j,k = input("Enter 3 numbers : ").split(",")
avg = (int(i)+int(j)+int(k))/3
print(f"average of three numbers is : {avg}")



Reverse the string:
lang = "Python"
print(lang[-1::-1])

Equivalent to 
lang = "Python"
print(lang[::-1])


name,srch=input("Enter name and character").split(",")
print(f"Length of name is {len(name)}")
print(f"Count is {name.strip().lower().count(srch.strip().lower())}")



Find and Replace Method :
string = "she is beautiful and she is good dancer"
# newstr = string.replace("is","was",1)
# print(newstr)
is_pos1 = string.find("is")
is_pos2 = string.find("is", is_pos1+1)
print(is_pos2)



How many times each charachter is repeated: 

name = input("enter your name : ") 
lgth = len(name)

i = 0
temp_var = ""
while i < lgth:
    if name[i] not in temp_var: 
        temp_var += name[i]
        print(name[i], name.count(name[i]))
    i+=1



k = input("Enter the name")
lgth = len(k)


temp_var = ""
for i in range(0,lgth):
    if k[i] not in temp_var:
        temp_var += k[i]
        print(k[i], k.count(k[i]))   


Calculate sum of digits :
k = input("Enter the number")
lgth = len(k)

sum=0
for i in range(0,lgth):
    sum += int(k[i])
    
print(sum)



Guessing Number Game


import random

winning_num = random.randint(1,100)
guess = 1 

game_over = False
k = int(input("Enter the number between 1 and 100 : "))
while not game_over:
    if winning_num  == k:
        game_over = True
        print("You won the game in " , guess, " times")
    else:
        if k < winning_num:
            print("too low")
            guess += 1 
            k= int(input("guess again : "))
        else:
            print("too high")
            guess += 1
            k= int(input("guess again : "))



fibonacci series in python : 
def fibo(n):
    i = 0 
    j = 1 
    k = 0
    for i in range (0,n):
        print(k)
        i = j  
        j = k
        k =  i + j
        


Factorial using recursion: 
def fact(n):
    if n==0:
        return 1 
    else:
        return n * fact(n-1)    
        
k = fact(4)
print(k)        


mixed = [1,2,3,4,5,'six','seven',8.9]
mixed[1:] =  'two'
print(mixed)



fruits1 = ['apple', 'mango']
fruits2 = ['banana', 'orange']


fruits1.append(fruits2)
print(fruits1)
['apple', 'mango', ['banana', 'orange']]

fruits1.extend(fruits2)
print(fruits1)
['apple', 'mango','banana', 'orange']


## append, extend, insert
## pop, remove, del

del fruits1[1]
fruits1.remove('banana')


double equals Vs is
double equals : Check for values
is : same memory or not

