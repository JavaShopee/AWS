Virtual_Private_Cloud : is the region specifc resourece.
subnet is assocaited to specific AZ

Like Mumbai VPC, ap south 1a 1b subnet

https://www.youtube.com/watch?v=G4KJPLDGMiI
AWS Tutorials | Virtual Private Cloud (VPC) Masterclass | May 21 and 22, 2019


Is the virtual data center and you get the full control upon its resources
Flexibility and enhanced security
Isolated VPC

Components you get full access upon :
1. To define the IP addresses : You can specify private IP addresses for your VPCs and Subnets
2. Sunbets > Public > Private
3. Route Tables
4. Internet Gateway
5. NACL(Network Access Contol List)
6. Virtual Private Gateway/Customer Gateway
7. NAT Device > NAT Gateway > NAT Instance

IP addresses 
Private : Internal Communication
Can't access private IP over the Internet
Ranges (X from 0 to 255): 
10.x.x.x
172.16.X.X > 172.31.X.X
192.168.x.x

Depending upon the private IP addr range of subnet and vpc, private IP is assigend to EC2 instance 
VPC : 10.0.0.0/16
SUbnet : 10.0.2.0/24
EC2 : 10.0.2.32/24

Public IP : External Communication over the internet
Range : Except private and loop back IPs troubleshooting (127.x.x.x)
Assined by AWS/ISP
Not Static in nature : It will change as you restart the instance

XYZ.com >> DNS Service >> Public IP Addr
You have to change your DNS entries everytime the instance restarts

Elastic IP Address : Same as public but they are static in nature even you stpo and start instances multiple times
External Communication 
Account specific IPs
Maanged by customers

Once you assign the elastic ip to the instance, it's public ip is released. Elastic IP = Public IP
Life Cycle of elastic IPs is independent of Life Cycle of Instace. 
Elastic IPs are account specific resources

Downside : 5 elastic ips/region free and this is max limit for any account type
Should not be allocated to Idle/Stopped Instances otherwise AWS will start charging


Subnet : is a complete range/block of private IPs. It consists of instances and each subnet is assocaited to specific AZ.
Types of Subnet Public Subnet  > Public Based Resources   >> Like Web Servers
                Private Subnet > Private Based Resources  >> Database resources
                
                
To expose any instance to the internet :
1. Assign elastic IP to the instances in public subnet
2. Launched in public subnet with access to IGW
                
                
Internet Gateway >> Opens the access to internet for VPCs
1 IGW is enough for 1 VPC

Route Table : 
Set of routes which determines how the network traffic will flow in and out of VPC(internally or externally out of VPC)
Like a GPS
Faciliates the link b/w instaces(in public subnet) to the IGW and IGW to the internet
Faciliates the link b/w instaces(in public subnet) and instaces in the private subnet(internal traffic) 

Go to VPC(Default) >> Subnet( there will be 3 for mumbai) >> choose Route Table >> 
It will consists of 2 route:
1. Destination      Target
	 172.31.0.0/16     local
that will facilitates the internal communication

2. Destination      Target
   0.0.0.0/0      igw-179c427f
that will facilitates the external communication

Subnet should have route table assocaited with it
route table should have IGW associated with it


NAT(Network Addreess Translation) Device : 


NAT Deivce running on public subnet
1. Help instance running in private subnet to download updates
2. Launched in public subnet
3. Associate an IP to it

Translate the IP addresses as soon as the traffic goes thru it

MySql Database running on private subnet need to download some pathces and updates
via Route table, it will communicate to NAT Device. NAT Device will expose it's own elastic ip as source ip to reach the
internet. When NAT will get the resonse, it will use mysql private ip as destination ip to route the updates

NAT Gateway  > Virtual Gateway    More stable   More Redundant     Managed Servcie(by AWS)  Requires less admin efforts 
NAT Instance > EC2 Instance       Less stable   Less Redundant     Managed by customer      Requires lot of config      

NAT Gateway  >  > Highly Available                              Cater to High Bandwidth requirements
NAT Instance >  > Not Stable as compared to gateway             Not capable enough for High Bandwidh needs

VPC >
Default           : Managed by AWS  
Customer Managed  : Managed by customer

Every subnet is public, there is no concept of security/private subnet
By default, every instance will be launched in public subnet and every instance will get public ip by default
Less flexible , Less Secure

Custom VPC >> has concept of private subnet/public subnet. There is no concept of public IPs, you have to depend upon 
elastic IPs
Flexible and more secure, you can deploy db in private subnet of VPC

You should not delete any of the parameter of default VPC


NACL  : Network Access Control List
-Virtual Firewall that you apply to the subnets

Security Grp : Restrict incoming and outgoing traffic wrt instance with the help of security grp
NACL : Restrict incoming and outgoing traffic wrt subnet with the help of NACL


Virtual Private Gateway/ Customer Gateway

VPG at the VPC border
CG at the Branch Office/ Data Center border
VPN connection b/w VPG and CG , it's encrypted tunnel over the internet


CIDR : Classless inter domain routing : CIDR Block/ IP Block
IPV4 address : 32 bits
10.0.0.0 >> 4 octate each with 8 bits(8+8+8+8)

Let say VPC with CIDR range : 10.0.0.0/16
first 16 bits > Define N/w
last 16 > Define host

Carve out subnet out of it , add 8 more bits to n/w
10.0.0.0/24
10.0.1.0/24
10.0.2.0/24
10.0.3.0/24 ...............10.0.255.0/24

Total 256 subnets

Carve out instance out of it , add 8 more bits to subnet let'say 10.0.2.0/24

10.0.2.0/32
10.0.2.1/32
10.0.2.2/32
10.0.2.3/32....10.0.2.255/32

Total 256 instances in one submet


Custom VPC :
1. Allocate Elasti IPs to Servers/Instances in public subnet
2. Connect public subnet with IGW
3. Private Subnet should be isolated from internet

If you choose Dedicated tenancy at the VPC level, every instance in that VPC will be launched in dedicated 
tenancy no matter what tenancy you choose at the instance level while creating instance

If you choose default tenancy at the VPC level, you can decide later on that you want to launch 
instance on dedicated host(dediacted tenancy) or shared host(shared tenancy)

Building Our First Non-Default VPC

Create a VPC with CIDR 10.0.0.0/16 while choosing tenancy as “Default”.
Create two different subnets - one Public and another Private within this VPC.
Create an Internet Gateway and attach it to the VPC.
Create a route table consisting of a route towards the internet through same internet gateway.
Associate this route table to the subnet to make it a “Public” subnet.
Launch an instance in each of these subnets.
Allocate an IP to your account and associate it with the EC2
instance running in Public subnet.
Initiate an SSH connection to the instance running in Public subnet
and try installing updates to it.
Initiate an SSH connection to the instance running in Private subnet
through instance running in Public one.
Create a NAT Gateway while associating an Elastic IP to it.
Create a route table with a route towards the internet through NAT
Gateway.
Associate this route table to the subnet which would be your Private
one.
Now, try installing updates to the instance running within Private
subnet.
Clean up

VPC Peering:
Connect mutliple VPCs together
Estblaish connection across VPCs in separate regions
Estblaish connection across VPCs in separate accounts

Use Case :
Finance VPC, Mgmt VPC, HR VPC in same comapny can be connected together
Connect Nasa VPS to SpaceX VPC (separate accounts)

Limitations : No overlapping CIDR blocks(no two ip addr should be same)

VPC Peering connection across 2 diff VPCs
Default VPC(Requestor) --------------------> Custom VPC(Acceptor)
Requestor---------------Invite-------------->Acceptor
Acceptor accepts the invite
Manipulate route table



******************2nd Revison*************
Public IPs : BYOIPs : If you have spare IPs, you can use them as public IPs or otherwise AWS will provide you free of cost.



ssh-add -K linuxec2-kp.pem
ssh -A ec2-user@52.9.171.211
ssh ec2-user@10.0.2.153

*****************************************************VPC***************************************************

Virual Private Gatewy : Border of VPC
Customer Gateway : Border of Corpoate N/W
You will have end to end IPSec VPN tunnel b/w VPG and CG
VPN tunnel  will encrypt entire traffic / data flowing to and fro 


Security, Flexibility and Cost Effective



Default and Non Default VPC


Non Default VPC : All EC2 Instances have private IPs
No Public /Elastic IPs assigned automatically
None of the subnet have IG attached to them
None of the subnet have access to Internet
IG can be attached to subnet manually through entry within the route table

