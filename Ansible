https://www.youtube.com/watch?v=sGeZm__pZ9I&list=PL2qzCKTbjutIyQAe3GglWISLnLTQLGm7e

Ansible : Open Source Automation tool
        : Simple to setup and powerful
        : Perform 
             : Configuration Mgt
             : Application Deploymelnt
             : Task Automation
             : IT orchestration
             
             
Ansible Architecture :

Ansible Engine / Controller / Master : Where you install your Ansible
Ansible Nodes / Clients :  Servers that you are going to manage with Ansible

Invntory File : IPs/ FQDN of Ansible nodes
Ansible.cfg : PWD for remote server users/ Parameters to work with Remote Seeervrs, Path of Inventory File

Playbook / Adhoc Commands using Modules
Ansible uses SSH connectivity to work with Remote Servers

Ansible is called Agent less Architecture:  We are not going to insatll any software on remote servers to work from Ansible Engine 
Python/ YAML based Syntax
Large number of Ready to use modules for System Mgt
Custom modules can be added if needed

https://github.com/ValaxyTech/DevOpsDemos/blob/master/Ansible/Ansible_installation_on_RHEL8.MD
https://www.youtube.com/watch?v=-Y8Oatd49qA
Install Python latest version (on Control node and Managed host)

yum install python3 -y
By default, python3 is the command to run python commands. to use just python, use "alternatives" command. (on Control node and Managed host)

alternatives --set python /usr/bin/python3
Check for Python version

python --version
Install python-pip package manager (on Control node)

yum -y install python3-pip

Ansible Installation on RHEL 8  

>> sudo su 
>> yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
from https://fedoraproject.org/wiki/EPEL
>> yum install ansible
>> ansible --version

Launch Amazon Linux 

On Master and Hosts:

>> useradd ansadmin
>> useradd -m ansadmin (for Ubuntu)
>> passwd ansadmin
>> visudo
ansadmin     ALL=(ALL)
>> vi /etc/ssh/sshd_config
/PasswordAuthentication yes

>>systemctl restart sshd
>>service sshd restart

On Master
>>sudo su ansadmin 
>>cd
>>ssh-keygen
>>cd .ssh/
>>ssh-copy-id host-ip
>>cd
>>cd /etc/ansible/
>>sudo vi hosts

Add IP of Hosts in hosts file

>> ansible all -m ping


The default ansible home directory c which consists of
hosts
roles
ansible.cfg  >> /etc/ansible/hosts

/etc/ansible/ is called defauly ansible home
             
             
[ansadmin@localhost ansible]$ cd
[ansadmin@localhost ~]$ mkdir my_ansible_working_dir
[ansadmin@localhost ~]$ cd my_ansible_working_dir/
[ansadmin@localhost my_ansible_working_dir]$ cp -rpP /etc/ansible/* .
[ansadmin@localhost my_ansible_working_dir]$ ls -lrt
total 28
drwxr-xr-x. 2 ansadmin ansadmin     6 Nov  4 01:54 roles
-rw-r--r--. 1 ansadmin ansadmin 19985 Nov  4 01:54 ansible.cfg
-rw-r--r--. 1 ansadmin ansadmin    15 Nov 26 14:20 myhosts
-rw-r--r--. 1 ansadmin ansadmin  1007 Nov 26 14:22 hosts


Everytime engine connect to node, it's asking for yes/no 
export Ansible_Host_Key_Checking = False

ansible.cfg > 
host_key_checking = False

Inventory file with Groups and Group of Groups


[ansadmin@localhost my_ansible_non_prod]$ vi hosts
[ansadmin@localhost my_ansible_non_prod]$ ansible group1 -m ping
[ansadmin@localhost my_ansible_non_prod]$ ansible group1:group2 -m ping

vi hosts
[group1]
localhost

[group2]
13.233.129.209

[db_oracle:children]
group1
group2


Ansible.cfg file locations with priority
1. ANSIBLE_CONFIG env variable
2. ./ansible.cfg from current dir
3. ~/.ansible.cfg from home dir (/home/ansadmin)
4. /etc/ansible/ansible.cfg



How Ansible works ?
Tasks wil be excuted on Managed Nodes only
Module( like shell) will be pushed to Managed Nodes (Engine is going to push on Managed Nodes and Not Vice Versa ... So called Push Mechanism)
Chef follows pull mechanism

Not insatlling any Software on Remote Nodes : Agent Less Architecture
Once the tasks will be exeuted, module from Managed Node will be removed

ANSIBLE_KEEP_REMOTE_FILES=1 ansible all -m ping
But where it will store Module on Managed Nodes  ??? /home/ansadmin/.ansible/tmp


In ansible.cfg file, there is a parameter forks :
forks = 5 (default) means at a time it's going to execute task on 5 Managed Nodes
if 12 servers, 3 goes

ansible all -m shell -a "sleep 5 ; echo 'hi'"
forks = 1 : Serial Execution instead of Parallel Execution



Module will be pushed here and result will be sent back to Control Node


Modules : Through modules, you can work with remote nodes. Predefined scripts to work with Remote nodes


Introduction to Ansible Ad-hoc Commands
uptime
free -m

Using Shell script run above 2 commands:
vi multi_task.sh
uptime
free -m
:wq

sh multi_task.sh

Ansible Ad-hoc Commands : Execute single tasks on Managed Nodes
Shell Script like playbook, you can exeute multiple tasks at a time.

Shell Module :
ansible db_server:web_server -m shell -a "uptime"

Lists all Modules :
ansible-doc -l
ansible-doc shell
ansible-doc -l | wc -l
3387 Modules

Transfer a file | copy a file to nodes  >> Copy Module
_______________________________________

ansible db_server -m copy -a "src=source/file/location dest=dest/location"

idempotent : If there are changes, then and only then file will be copied, otherwise CHANGED=FALSE
ansible group2 -m copy -a "content='Hi There\n' dest=/tmp/hello.txt backup=yes"

\n > Terminal will be coming to New Line

Downloading a file from Ansible Managed Nodes to Ansible Engine  > Fetch Module
______________________________________________________________
ansible db_server -m fetch -a "src=source/file/location/MNode dest=dest/location/Controller"

ansible 13.235.133.114 -m fetch -a "src=/home/ansadmin/demo.txt dest=./demo/"


13.235.133.114 | CHANGED => {
    "changed": true,
    "checksum": "85f2da7189901858923a65b5d36f309d01e434c2",
    "dest": "/home/ansadmin/my_ans_working_dir/demo/13.235.133.114/home/ansadmin/demo.txt",
    
 
To avoid above directory structure
ansible 13.235.133.114 -m fetch -a "src=/home/ansadmin/demo.txt dest=./newdemo/{{inventory_hostname}}_demo.txt flat=yes"


Create or Delete a file or directory on Managed Nodes  >   File Module
________________________________________________________

ansible 13.235.133.114 -m file -a "path=/home/ansadmin/helloo.txt state=touch"
ansible 13.235.133.114 -m file -a "path=/home/ansadmin/helloo.txt state=touch mode='0777'"
ansible 13.235.133.114 -m file -a "path=/home/ansadmin/helloo.txt state=absent"
ansible 13.235.133.114 -m file -a "path=/home/ansadmin/helloo state=directory"
ansible 13.235.133.114 -m file -a "path=/etc/hello.txt state=touch"        >> Permission Denied
ansible 13.235.133.114 -m file -a "path=/etc/hello.txt state=touch" -b     >> providing Root Privileges for ansadmin user

ansible db -m ping --list-host
ansible -h 

Different modules to work with files
____________________________________

https://docs.ansible.com/ansible/2.8/modules/list_of_files_modules.html

Install a package using yum module on Linux Managed Nodes
________________________________________________________

System : Linux > Module as yum
System : Ubuntu/Debian > Module as apt


ansible db -m yum -a "name=git state=present" -b
ansible db -m yum -a "name=httpd state=present" -b

state=present/absent/latest



NOPASSWD : ALL
No need to provide any pwd while running your ansible adhoc command with Root Privileges from your ansadmin user






Fetch File from Host 
>> ansible 13.232.222.133 -m fetch -a "src=/home/ansadmin/demo.txt dest=./{{inventory_hostname}}_demo.txt flat=yes"
flat=yes : No extra dir structure will be created otherwise host dir structure


Create a file hello.txt under tmp location: 
ansible 13.232.222.133 -m file -a "path=/tmp/hello.txt state=touch"
ansible 13.232.222.133 -m file -a "path=/tmp/newhello.txt state=touch mode='777'"

Remove a file 
ansible 13.232.222.133 -m file -a "path=/tmp/newhello.txt state=absent"
ansible 13.232.222.133 -m file -a "path=/tmp/hello state=directory"

With Root Privileges -b
ansible 13.232.222.133 -m file -a "path=/etc/demo.txt state=touch" -b
ansible group3 -m ping --list-hosts


Files Modules in Ansible 
https://docs.ansible.com/ansible/2.8/modules/list_of_files_modules.html

Install Git on Hosts with Root Privileges :
ansible 13.232.222.133 -m yum -a "name=git state=present" -b
ansible 13.232.222.133 -m yum -a "name=httpd state=present" -b

Gathering Facts :
The task of collecting remote system information is called Gathering Facts
Collected/ Gathered Information is called Facts or Variables
You can collect facts using Setup Modules in adhoc commands

Ansible Playbooks : By Default call Setup Module to gather facts tasks


Syntax :
Ansible group_of_servers -m setup
ansible 13.232.222.133 -m setup -a "filter=ansible_mounts"


Facts : Information about your managed nodes : 2 Types:
Default Facts
Custome Facts

Sample Playbook 
---
 - name: The Sample Name
   hosts: all
   tasks:
   - name: Default Verbosity
     debug:
      msg: "this is default msg"
      verbosity: 0
   - name: Verbosity is 2
     debug:
      msg: "Verbo is 2"
      verbosity: 2



Sample Playbook

---
 - name: Sample Name
   hosts: 65.0.96.120
   tasks:
   - name: Print a message
     debug:
      msg:
       -  "Sample Playbook"
       -  "Message 2"
       -  "Message 3"


#   - debug: msg="This is sample playbook"


Sample Playbook
!/bin/ansible-playbook
 - name: Usage of debug module
   hosts: all
   tasks:
   - name: print a var using debug module
     debug:
#      msg: "The host name is : {{inventory_hostname}}"
       var: inventory_hostname
       
       
How to read and print a variable value using ansible playbook
---
 - hosts: localhost
   vars:
    x: 45
    my_name: "Sachin"
   vars_prompt:
    name: y
    prompt: Enter the value for y
    private: false
   gather_facts: false
   tasks:
   - debug:
      msg:
       - "The x value is : {{x}}"
       - "The my_name is : {{my_name}}"
       - "The value of y is {{y}}"
       
       
       
       
       
Command Line Args       
ansible-playbook cmd-line-args.yml -e "x=10"   

---
 - hosts: localhost
   gather_facts: false
   tasks:
   - debug: var=x
   
   
   We can pass different type of variables in different formats:
   Scaler, Sequence, Map
   
   
   Scaler
   ansible-playbook cmd-line-args.yml -e "x=10 y=50"
   ansible-playbook cmd-line-args.yml -e "{'x':10,'y':20}"
   ansible-playbook cmd-line-args.yml -e "x=10 y='The Sample Y Value'"
   
   Sequence
   ansible-playbook cmd-line-args.yml -e "{'x': [1,2,3,4],'y': 10}"
   
   Map 
   ansible-playbook cmd-line-args.yml -e "{'x': {'one': 1, 'two': 2},'y':20}"
   
   
   
   
   Passing Values in file :
   ansible-playbook cmd-line-args.yml -e "@var_values.yml"
   
---
 x: 45
 y:
  - 4
  - 67
  - "ansible"


Installing Packages :

ansible-playbook install_uninstall.yml -e "pkg=httpd req_state=present"
---
 - hosts: localhost
   gather_facts: false
   become: yes
   tasks:
   - yum:
      name: "{{pkg}}"
      state: "{{req_state}}"
      
VS Code Editor Installation      
      
step1: Import Microsoft GPG key
   sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
step2: create the following repo file to enable the Visual Studio Code repository
   sudo nano /etc/yum.repos.d/vscode.repo
   
   Paste the following content into the file:

[code]
name=Visual Studio Code
baseurl=https://packages.microsoft.com/yumrepos/vscode
enabled=1
gpgcheck=1
gpgkey=https://packages.microsoft.com/keys/microsoft.asc

step3: Install vs code
   sudo yum install code

step4:   Launch visual studio code using termainal
   code .
step5: Add Required Extensions
   ansible extention/plugin



ignore_errors: yes

---
 - hosts: localhost
   gather_facts: false
   tasks:
     - block:
        - command: "ls /home/ansadmin/dir1" 
          register: out_dir1
        - command: "ls /home/ansadmin/dir2" 
          register: out_dir2
        - command: "ls /home/ansadmin/dir3" 
          register: out_dir3
       ignore_errors: yes

     - debug: var=out_dir1 
     - debug: var=out_dir2
     - debug: var=out_dir3
      
      
      




       

       
       








             
             
